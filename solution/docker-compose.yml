name: advertisement

services:
  postgres:
    image: postgres:16.6
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - path: .env.template
        required: true
      - path: .env
        required: false
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      PGPORT: $POSTGRES_PORT
    ports:
      - "$POSTGRES_PORT:$POSTGRES_PORT"

  backend:
    restart: always
    networks:
      - default
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    env_file:
      - path: .env.template
        required: true
      - path: .env
        required: false
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://$SERVER_ADDRESS/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    build:
      dockerfile: ./Dockerfile-fastapi

volumes:
  app-db-data: